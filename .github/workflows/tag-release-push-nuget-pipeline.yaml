name: Create Tag, Release and Publish package to NuGet

on:
  workflow_dispatch:

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Extract Version from .csproj
        id: extract-version
        run: |
          VERSION=$(grep -oPm1 "(?<=<Version>)[^<]+" src/Nhtsa.SDK.Clients/Nhtsa.SDK.Clients.csproj)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create Tag and push it
        run: |
          TAG="v${{ env.VERSION }}"
          echo "TAG=$TAG" >> $GITHUB_ENV

          git config user.name github-actions
          git config user.email github-actions@github.com

          git tag -a "$TAG" -m "Stable $TAG"
          git push origin "$TAG"

  create-release:
    runs-on: ubuntu-latest
    needs: create-tag

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
          token: ${{ secrets.GH_PAT }}

      - name: üõ†Ô∏è Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          # global-json-file: global.json
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: üì¶ Restore NuGet packages dependencies
        run: dotnet restore

      - name: üõ†Ô∏è Build solution
        run: dotnet build -c Release --no-restore

      # - name: Get previous tag
      #   id: previoustag
      #   uses: WyriHaximus/github-action-get-previous-tag@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Get next minor semantic version
      #   id: semvers
      #   uses: "WyriHaximus/github-action-next-semvers@v1"
      #   with:
      #     version: ${{ steps.previoustag.outputs.tag }}

      - name: Create the GitHub release
        run: |
          gh release create "$TAG" --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifact to Release
        run: |
          gh release upload "$TAG" \
            ./src/Nhtsa.SDK.Clients/bin/Release/*.nupkg \
            ./src/Nhtsa.SDK.Clients/bin/Release/*.snupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
